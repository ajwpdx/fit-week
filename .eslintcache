[{"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\index.js":"1","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\App.js":"2","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\dates.js":"3","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\data.js":"4","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Planner.js":"5","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Header.js":"6","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\PlannerWorkout.js":"7","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\WorkoutForm.js":"8","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\UserIcon.js":"9","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\redux-reducer\\index.js":"10","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\redux-actions\\index.js":"11","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\WorkoutLibrary.js":"12","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\views\\MyPlan.js":"13","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Movement.js":"14","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\views\\Login.js":"15","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\views\\Signup.js":"16","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\LoginForm.js":"17"},{"size":614,"mtime":1613688868266,"results":"18","hashOfConfig":"19"},{"size":769,"mtime":1613688976758,"results":"20","hashOfConfig":"19"},{"size":3625,"mtime":1613428266357,"results":"21","hashOfConfig":"19"},{"size":1472,"mtime":1613428266356,"results":"22","hashOfConfig":"19"},{"size":6073,"mtime":1613428266303,"results":"23","hashOfConfig":"19"},{"size":658,"mtime":1613428266299,"results":"24","hashOfConfig":"19"},{"size":1838,"mtime":1613428266303,"results":"25","hashOfConfig":"19"},{"size":2587,"mtime":1613686576019,"results":"26","hashOfConfig":"19"},{"size":241,"mtime":1613428266305,"results":"27","hashOfConfig":"19"},{"size":604,"mtime":1613428266325,"results":"28","hashOfConfig":"19"},{"size":221,"mtime":1613428266323,"results":"29","hashOfConfig":"19"},{"size":1006,"mtime":1613428266308,"results":"30","hashOfConfig":"19"},{"size":436,"mtime":1613428266311,"results":"31","hashOfConfig":"19"},{"size":446,"mtime":1613686530148,"results":"32","hashOfConfig":"19"},{"size":313,"mtime":1613689331764,"results":"33","hashOfConfig":"19"},{"size":219,"mtime":1613687968393,"results":"34","hashOfConfig":"19"},{"size":568,"mtime":1613690593135,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yqnk",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\index.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\App.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\dates.js",["76"],"import { DateTime } from 'luxon'\r\nimport {daysOfTheWeekAbrev } from './data'\r\n\r\n// const daysOfTheWeekAbrev = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n\r\nconst today = new Date();\r\n\r\nexport const getDayType = (weekView, startDay, position) => {\r\n    \r\n    if (weekView < 0){\r\n        return \"past-date\"\r\n    } else if (weekView > 0) {\r\n        return \"future-date\"\r\n    } else {\r\n        let dayIncrement = 0\r\n\r\n        if (today.getDay() > startDay){\r\n            dayIncrement = startDay - today.getDay()\r\n        } else if (today.getDay() < startDay) {\r\n            dayIncrement = -(7 - (startDay - today.getDay()))\r\n        }\r\n\r\n        if (dayIncrement + position > 0) {\r\n            return \"future-date\"\r\n        } else if (dayIncrement + position < 0) {\r\n            return \"past-date\"\r\n        } else{\r\n            return \"current-date\"\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getDayOfWeek = (weekView, startDay, position) => {\r\n\r\n    let dayOfWeek = \"Mon\"\r\n    \r\n    if (startDay + position >= 7) {\r\n        dayOfWeek = daysOfTheWeekAbrev[startDay + position - 7]\r\n    } else {\r\n        dayOfWeek = daysOfTheWeekAbrev[startDay + position]\r\n    }\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n\r\n    return dayOfWeek + \" â€¢ \" + (startOfWeek.plus({days:position}).day)\r\n\r\n}\r\n\r\nexport const getWeekStart = (weekView, startDay) =>{\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n    let endOfWeek = startOfWeek.plus({days: 6})\r\n\r\n    return startOfWeek.toFormat('LLL dd')\r\n}\r\n\r\nexport const getWeekEnd = (weekView, startDay) =>{\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n    let endOfWeek = startOfWeek.plus({days: 6})\r\n\r\n    return endOfWeek.toFormat('LLL dd')\r\n} \r\n\r\nexport const getWeek = (weekView, startDay) =>{\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n    let endOfWeek = startOfWeek.plus({days: 6})\r\n\r\n    return startOfWeek.toFormat('LLL dd') + \" - \" + endOfWeek.toFormat('LLL dd')\r\n} \r\n\r\nexport const getYear = (weekView, startDay) => {\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n    let endOfWeek = startOfWeek.plus({days: 6})\r\n\r\n    if (startOfWeek.toFormat('yyyy') === endOfWeek.toFormat('yyyy')){\r\n\r\n        return startOfWeek.toFormat('yyyy')\r\n    } else {\r\n        return startOfWeek.toFormat('yyyy') + \" - \" + endOfWeek.toFormat('yyyy')\r\n    }\r\n}",["77","78"],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\data.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Planner.js",["79"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getDayType, getDayOfWeek, getWeek, getYear } from \"../../util/dates\"\r\nimport PlannerWorkout from './PlannerWorkout'\r\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons'\r\nimport { myWorkouts } from \"../../util/data\"\r\nimport WorkoutForm from './WorkoutForm'\r\n\r\nconst Planner = (props) => {\r\n\r\n    const [weekView, setWeekView] = useState(0)\r\n    const [workouts, setWorkouts] = useState(myWorkouts)\r\n    const [creatingWO, setCreatingWO] = useState(false)\r\n    const [WOFormPosition, setWOFormPosition] = useState({left: 200, top: 200})\r\n\r\n    const createNewWO = (evt) => {\r\n        setWOFormPosition({left: evt.target.offsetLeft + 25, top: evt.target.parentElement.offsetTop + 25})\r\n        setCreatingWO(true)\r\n        console.log('create')\r\n    } \r\n\r\n    return (\r\n        \r\n        <section id='planner'>\r\n            <WorkoutForm creatingWO={creatingWO} setCreatingWO={setCreatingWO} WOFormPosition={WOFormPosition}/>\r\n            <div className='planner-header'>\r\n                <button className='add-workout-btn'onClick={createNewWO}> + New Workout</button>\r\n                <div className='time-period'>\r\n                    <h3>{getYear(weekView,props.startDay)}</h3>\r\n                    <h2>{getWeek(weekView, props.startDay)}</h2>\r\n                </div>\r\n                <div className='increment-arrows'>\r\n                    <LeftOutlined className='inc-arrow' onClick={() => setWeekView(weekView - 1)} />\r\n                    <RightOutlined className='inc-arrow' onClick={() => setWeekView(weekView + 1)} />\r\n                </div>\r\n            </div>\r\n            <div id='planner-days'>\r\n                <div className={\"planner-day \" + getDayType(weekView, props.startDay, 0)}>\r\n                    <h3 className='planner-day-title'> {getDayOfWeek(weekView, props.startDay, 0)}</h3>\r\n                    <div className=\"planner-workouts-container\">\r\n\r\n                        {workouts.map((workout) => {\r\n                            return <PlannerWorkout key={workout.workoutId} workout={workout} />\r\n\r\n                        })}\r\n                        <button className='add-workout-btn'onClick={createNewWO}> + New Workout</button>\r\n                    </div>\r\n                </div>\r\n                <div className={\"planner-day \" + getDayType(weekView, props.startDay, 1)}>\r\n                    <h3 className='planner-day-title'>{getDayOfWeek(weekView, props.startDay, 1)}</h3>\r\n                    <div className=\"planner-workouts-container\">\r\n                        {workouts.map((workout) => {\r\n                            return <PlannerWorkout key={workout.workoutId} workout={workout} />\r\n\r\n                        })}\r\n                        <button className='add-workout-btn'onClick={createNewWO}> + New Workout</button>\r\n                    </div>\r\n                </div>\r\n                <div className={\"planner-day \" + getDayType(weekView, props.startDay, 2)}>\r\n                    <h3 className='planner-day-title'>{getDayOfWeek(weekView, props.startDay, 2)}</h3>\r\n                    <div className=\"planner-workouts-container\">\r\n                        {workouts.map((workout) => {\r\n                            return <PlannerWorkout key={workout.workoutId} workout={workout} />\r\n\r\n                        })}\r\n                        <button className='add-workout-btn'onClick={createNewWO}> + New Workout</button>\r\n                    </div>\r\n                </div>\r\n                <div className={\"planner-day \" + getDayType(weekView, props.startDay, 3)}>\r\n                    <h3 className='planner-day-title'>{getDayOfWeek(weekView, props.startDay, 3)}</h3>\r\n                    <div className=\"planner-workouts-container\">\r\n                        {workouts.map((workout) => {\r\n                            return <PlannerWorkout key={workout.workoutId} workout={workout} />\r\n\r\n                        })}\r\n                        <button className='add-workout-btn'onClick={createNewWO}> + New Workout</button>\r\n                    </div>\r\n                </div>\r\n                <div className={\"planner-day \" + getDayType(weekView, props.startDay, 4)}>\r\n                    <h3 className='planner-day-title'>{getDayOfWeek(weekView, props.startDay, 4)}</h3>\r\n                    <div className=\"planner-workouts-container\">\r\n                        {workouts.map((workout) => {\r\n                            return <PlannerWorkout key={workout.workoutId} workout={workout} />\r\n\r\n                        })}\r\n                        <button className='add-workout-btn'onClick={createNewWO}> + New Workout</button>\r\n                    </div>\r\n                </div>\r\n                <div className={\"planner-day \" + getDayType(weekView, props.startDay, 5)}>\r\n                    <h3 className='planner-day-title'>{getDayOfWeek(weekView, props.startDay, 5)}</h3>\r\n                    <div className=\"planner-workouts-container\">\r\n                        {workouts.map((workout) => {\r\n                            return <PlannerWorkout key={workout.workoutId} workout={workout} />\r\n\r\n                        })}\r\n                        <button className='add-workout-btn'onClick={createNewWO}> + New Workout</button>\r\n                    </div>\r\n                </div>\r\n                <div className={\"planner-day \" + getDayType(weekView, props.startDay, 6)}>\r\n                    <h3 className='planner-day-title'>{getDayOfWeek(weekView, props.startDay, 6)}</h3>\r\n                    <div className=\"planner-workouts-container\">\r\n                        {workouts.map((workout) => {\r\n                            return <PlannerWorkout key={workout.workoutId} workout={workout} />\r\n\r\n                        })}\r\n                        <button className='add-workout-btn'onClick={createNewWO}> + New Workout</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => state\r\n\r\nexport default connect(mapStateToProps, {})(Planner)","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Header.js",["80","81"],"import React from 'react'\r\nimport UserIcon from './UserIcon'\r\nimport { SettingOutlined } from '@ant-design/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header>\r\n            <h1 className='header-logo'>\r\n                W/O Plan\r\n        </h1>\r\n            <nav className='header-nav'>\r\n                <a href='/My-Plan'>My Plan</a>\r\n                <a href='/wo-library'>W/O Library</a>\r\n                <a href='/Workout-Plans'>Programs</a>\r\n                <a href='/Connect'>Connect</a>\r\n                <UserIcon />\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\PlannerWorkout.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\WorkoutForm.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\UserIcon.js",["82"],"import React, {useState} from 'react'\r\n\r\n\r\n\r\nconst UserIcon = () => {\r\n\r\n    return(\r\n\r\n    <div className='user-icon' onClick={()=>{console.log('open user preferences')}}>\r\n        <h3>A</h3>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default UserIcon","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\redux-reducer\\index.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\redux-actions\\index.js",["83"],"import axios from 'axios'\r\n\r\nexport const FETCHING_SAVED_WORKOUTS = 'FETCHING_SAVED_WORKOUTS'\r\nexport const FETCH_SAVED_WORKOUTS = 'FETCH_SAVED_WORKOUTS'\r\nexport const FETCH_CURRENT_WORKOUTS = 'FETCH_CURRENT_WORKOUTS'\r\n\r\n","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\WorkoutLibrary.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\views\\MyPlan.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Movement.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\views\\Login.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\views\\Signup.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\LoginForm.js",[],{"ruleId":"84","severity":1,"message":"85","line":69,"column":9,"nodeType":"86","messageId":"87","endLine":69,"endColumn":18},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"84","severity":1,"message":"92","line":12,"column":22,"nodeType":"86","messageId":"87","endLine":12,"endColumn":33},{"ruleId":"84","severity":1,"message":"93","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":25},{"ruleId":"84","severity":1,"message":"94","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":14},{"ruleId":"84","severity":1,"message":"95","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"84","severity":1,"message":"96","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":13},"no-unused-vars","'endOfWeek' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'setWorkouts' is assigned a value but never used.","'SettingOutlined' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]