[{"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\index.js":"1","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\App.js":"2","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\dates.js":"3","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\data.js":"4","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Planner.js":"5","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Header.js":"6","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\PlannerWorkout.js":"7","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\WorkoutForm.js":"8","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\UserIcon.js":"9","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\redux-reducer\\index.js":"10","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\redux-actions\\index.js":"11","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\WorkoutLibrary.js":"12"},{"size":558,"mtime":1613248909109,"results":"13","hashOfConfig":"14"},{"size":399,"mtime":1613249622941,"results":"15","hashOfConfig":"14"},{"size":3625,"mtime":1612662887927,"results":"16","hashOfConfig":"14"},{"size":1472,"mtime":1612423237240,"results":"17","hashOfConfig":"14"},{"size":6073,"mtime":1613248353547,"results":"18","hashOfConfig":"14"},{"size":603,"mtime":1613248358691,"results":"19","hashOfConfig":"14"},{"size":1838,"mtime":1613248312747,"results":"20","hashOfConfig":"14"},{"size":2517,"mtime":1613248352097,"results":"21","hashOfConfig":"14"},{"size":241,"mtime":1613248357267,"results":"22","hashOfConfig":"14"},{"size":604,"mtime":1613248944270,"results":"23","hashOfConfig":"14"},{"size":221,"mtime":1611274998244,"results":"24","hashOfConfig":"14"},{"size":1006,"mtime":1613251826198,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yqnk",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\index.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\App.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\dates.js",["52"],"import { DateTime } from 'luxon'\r\nimport {daysOfTheWeekAbrev } from './data'\r\n\r\n// const daysOfTheWeekAbrev = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n\r\nconst today = new Date();\r\n\r\nexport const getDayType = (weekView, startDay, position) => {\r\n    \r\n    if (weekView < 0){\r\n        return \"past-date\"\r\n    } else if (weekView > 0) {\r\n        return \"future-date\"\r\n    } else {\r\n        let dayIncrement = 0\r\n\r\n        if (today.getDay() > startDay){\r\n            dayIncrement = startDay - today.getDay()\r\n        } else if (today.getDay() < startDay) {\r\n            dayIncrement = -(7 - (startDay - today.getDay()))\r\n        }\r\n\r\n        if (dayIncrement + position > 0) {\r\n            return \"future-date\"\r\n        } else if (dayIncrement + position < 0) {\r\n            return \"past-date\"\r\n        } else{\r\n            return \"current-date\"\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getDayOfWeek = (weekView, startDay, position) => {\r\n\r\n    let dayOfWeek = \"Mon\"\r\n    \r\n    if (startDay + position >= 7) {\r\n        dayOfWeek = daysOfTheWeekAbrev[startDay + position - 7]\r\n    } else {\r\n        dayOfWeek = daysOfTheWeekAbrev[startDay + position]\r\n    }\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n\r\n    return dayOfWeek + \" â€¢ \" + (startOfWeek.plus({days:position}).day)\r\n\r\n}\r\n\r\nexport const getWeekStart = (weekView, startDay) =>{\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n    let endOfWeek = startOfWeek.plus({days: 6})\r\n\r\n    return startOfWeek.toFormat('LLL dd')\r\n}\r\n\r\nexport const getWeekEnd = (weekView, startDay) =>{\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n    let endOfWeek = startOfWeek.plus({days: 6})\r\n\r\n    return endOfWeek.toFormat('LLL dd')\r\n} \r\n\r\nexport const getWeek = (weekView, startDay) =>{\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n    let endOfWeek = startOfWeek.plus({days: 6})\r\n\r\n    return startOfWeek.toFormat('LLL dd') + \" - \" + endOfWeek.toFormat('LLL dd')\r\n} \r\n\r\nexport const getYear = (weekView, startDay) => {\r\n\r\n    let dayIncrement = 0\r\n\r\n    if (today.getDay() > startDay){\r\n        dayIncrement = startDay - today.getDay()\r\n    } else if (today.getDay() < startDay) {\r\n        dayIncrement = -(7 - (startDay - today.getDay()))\r\n    }\r\n\r\n    let startOfWeek = DateTime.local().plus({days: dayIncrement, week: weekView})\r\n    let endOfWeek = startOfWeek.plus({days: 6})\r\n\r\n    if (startOfWeek.toFormat('yyyy') === endOfWeek.toFormat('yyyy')){\r\n\r\n        return startOfWeek.toFormat('yyyy')\r\n    } else {\r\n        return startOfWeek.toFormat('yyyy') + \" - \" + endOfWeek.toFormat('yyyy')\r\n    }\r\n}",["53","54"],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\data.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Planner.js",["55"],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\Header.js",["56","57"],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\PlannerWorkout.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\WorkoutForm.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\UserIcon.js",["58"],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\redux-reducer\\index.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\redux-actions\\index.js",["59"],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\layouts\\WorkoutLibrary.js",[],{"ruleId":"60","severity":1,"message":"61","line":69,"column":9,"nodeType":"62","messageId":"63","endLine":69,"endColumn":18},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"60","severity":1,"message":"68","line":12,"column":22,"nodeType":"62","messageId":"63","endLine":12,"endColumn":33},{"ruleId":"60","severity":1,"message":"69","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":25},{"ruleId":"60","severity":1,"message":"70","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":14},{"ruleId":"60","severity":1,"message":"71","line":1,"column":16,"nodeType":"62","messageId":"63","endLine":1,"endColumn":24},{"ruleId":"60","severity":1,"message":"72","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},"no-unused-vars","'endOfWeek' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'setWorkouts' is assigned a value but never used.","'SettingOutlined' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]