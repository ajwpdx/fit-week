[{"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\index.js":"1","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\App.js":"2","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\Header.js":"3","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\SavedWorkouts.js":"4","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\Planner.js":"5","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\PlannerWorkout.js":"6","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\dates.js":"7","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\reducers\\index.js":"8","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\actions\\index.js":"9"},{"size":553,"mtime":1610068117321,"results":"10","hashOfConfig":"11"},{"size":371,"mtime":1609983166771,"results":"12","hashOfConfig":"11"},{"size":224,"mtime":1610134274548,"results":"13","hashOfConfig":"11"},{"size":214,"mtime":1609984572328,"results":"14","hashOfConfig":"11"},{"size":2725,"mtime":1610218355049,"results":"15","hashOfConfig":"11"},{"size":254,"mtime":1609906630342,"results":"16","hashOfConfig":"11"},{"size":1292,"mtime":1610219195586,"results":"17","hashOfConfig":"11"},{"size":618,"mtime":1610070008075,"results":"18","hashOfConfig":"11"},{"size":219,"mtime":1609983906014,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1yqnk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\index.js",[],["44","45"],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\App.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\Header.js",["46"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n\r\nreturn (\r\n    <header>\r\n        <h1>\r\n            FIT WEEK\r\n        </h1>\r\n\r\n    </header>\r\n)\r\n\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\SavedWorkouts.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\Planner.js",["47"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {getCalendarDay, getDayOfWeek} from \"../util/dates\"\r\nimport PlannerWorkout from './PlannerWorkout'\r\n\r\nconst dummyWorkouts = [{title: \"Run\", distance: \"6 miles\"}, {title: \"Push ups\", sets: 3}]\r\n\r\nconst Planner = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <section id='planner'>\r\n            <h2 className='time-period-title'>Current Week</h2>\r\n            <div id='planner-days'>\r\n            <div className=\"planner-day\">\r\n                <h3>{getDayOfWeek(props.startDay)} • {getCalendarDay(props.weekIncrement, props.startDay)}</h3>\r\n                <div className=\"planner-workouts-container\">\r\n\r\n                    <PlannerWorkout/>\r\n                    <PlannerWorkout/>\r\n                </div>\r\n            </div>\r\n            <div className=\"planner-day\">\r\n                <h3>{getDayOfWeek(props.startDay +1)} • {getCalendarDay(props.weekIncrement, props.startDay+1)}</h3>\r\n                <div className=\"planner-workouts-container\">\r\n                    <PlannerWorkout/>\r\n                    <PlannerWorkout/>\r\n                </div>\r\n            </div>\r\n            <div className=\"planner-day\">\r\n                <h3>{getDayOfWeek(props.startDay+2)}</h3>\r\n                <div className=\"planner-workouts-container\">\r\n                    <PlannerWorkout/>\r\n                    <PlannerWorkout/>\r\n                </div>\r\n            </div>\r\n            <div className=\"planner-day\">\r\n                <h3>{getDayOfWeek(props.startDay+3)}</h3>\r\n                <div className=\"planner-workouts-container\">\r\n                    <PlannerWorkout/>\r\n                    <PlannerWorkout/>\r\n                </div>\r\n            </div>\r\n            <div className=\"planner-day\">\r\n                <h3>{getDayOfWeek(props.startDay+4)}</h3>\r\n                <div className=\"planner-workouts-container\">\r\n                    <PlannerWorkout/>\r\n                    <PlannerWorkout/>\r\n                </div>\r\n            </div>\r\n            <div className=\"planner-day\">\r\n                <h3>{getDayOfWeek(props.startDay+5)}</h3>\r\n                <div className=\"planner-workouts-container\">\r\n                    <PlannerWorkout/>\r\n                    <PlannerWorkout/>\r\n                </div>\r\n            </div>\r\n            <div className=\"planner-day\">\r\n                <h3>{getDayOfWeek(props.startDay+6)}</h3>\r\n                <div className=\"planner-workouts-container\">\r\n                    <PlannerWorkout/>\r\n                    <PlannerWorkout/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => state\r\n\r\nexport default connect(mapStateToProps, {})(Planner)","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\components\\PlannerWorkout.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\util\\dates.js",["48","49"],"\r\nconst startOfWeek = 0\r\n\r\nconst daysOfTheWeekAbrev = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n\r\nconst today = new Date();\r\n\r\n\r\n\r\nexport const getCalendarDay = (week, startDay) => {\r\n\r\n\r\n    if (today.getDay() < startDay) {\r\n        return (today.getDate() - startDay)\r\n    } else if (today.getDay() > startDay){\r\n        return (today.getDate() + startDay)\r\n    } else {\r\n\r\n        return today.getDate()\r\n    }\r\n    \r\n}\r\n\r\nexport const getDayOfWeek = (startDay) => {\r\n    \r\n    let calendarDay = String(today.getDate());\r\n\r\n    // if (startOfWeek > today.getDay()) {\r\n    //     dd = String(today.getDate - startOfWeek)\r\n    // } else if (startOfWeek < today.getDay){\r\n    //     dd = String(today.getDate + startOfWeek)\r\n    // }\r\n\r\n    if (startDay >= 7) {\r\n        return daysOfTheWeekAbrev[startDay - 7]\r\n    } else {\r\n        return daysOfTheWeekAbrev[startDay]\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const getToday = () =>{\r\n\r\n    // let today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    const yyyy = today.getFullYear();\r\n    \r\n    return mm + '/' + dd + '/' + yyyy;\r\n}\r\n\r\n\r\nexport const getWeek = (increment, startDay) =>{\r\n\r\n    if (today > startDay) {\r\n        \r\n    }\r\n}","C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\reducers\\index.js",[],"C:\\Users\\alexj\\documents\\coding\\fit-week\\src\\actions\\index.js",["50"],"import axios from 'axios'\r\n\r\nexport const FETCHING_SAVED_WORKOUTS = 'FETCHING_SAVED_WORKOUTS'\r\nexport const FETCH_SAVED_WORKOUTS = 'FETCH_SAVED_WORKOUTS'\r\nexport const FETCH_CURRENT_WORKOUTS = 'FETCH_CURRENT_WORKOUTS'\r\n",["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":9,"nodeType":"59","messageId":"60","endLine":2,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":6,"column":7,"nodeType":"59","messageId":"60","endLine":6,"endColumn":20},{"ruleId":"57","severity":1,"message":"62","line":2,"column":7,"nodeType":"59","messageId":"60","endLine":2,"endColumn":18},{"ruleId":"57","severity":1,"message":"63","line":26,"column":9,"nodeType":"59","messageId":"60","endLine":26,"endColumn":20},{"ruleId":"57","severity":1,"message":"64","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"53","replacedBy":"65"},{"ruleId":"55","replacedBy":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'dummyWorkouts' is assigned a value but never used.","'startOfWeek' is assigned a value but never used.","'calendarDay' is assigned a value but never used.","'axios' is defined but never used.",["67"],["68"],"no-global-assign","no-unsafe-negation"]